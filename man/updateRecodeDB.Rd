% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/updateRecodeDB.R
\name{updateRecodeDB}
\alias{updateRecodeDB}
\title{Update Recode Data Base}
\usage{
updateRecodeDB(
  newRecodes,
  oldValues = "oldValues",
  newValues = "newValues",
  directory = getwd(),
  newDirectory = directory,
  DBname,
  newDBname = DBname,
  ListName,
  fileType = "csv2",
  override = FALSE
)
}
\arguments{
\item{newRecodes}{A \code{data.frame} containing new recode information.}

\item{oldValues}{A character string of the column name containing the old values in the \code{newRecodes} data.frame.}

\item{newValues}{A character string of the column name containing the newly recoded values in the \verb{newRecodes data.frame}.}

\item{directory}{Path to the directory where the data base is stored.}

\item{newDirectory}{If the updated data base should be stored in a different directory, specify its path here.}

\item{DBname}{Name of the database.}

\item{newDBname}{If the updated data base should be stored under a different name, specify it here.
are present in the \code{newRecodes}?}

\item{ListName}{Name of the specific recode list to be imported.}

\item{fileType}{"csv2" (default), "csv", "xlsx"}

\item{override}{Logical of length 1. Should existing recode pairs be overwritten when conflicting newer recode pairs.}
}
\description{
Update a recode data base stored in an Excel file.
Takes new recode information, compares it to the existing recode database, and updates the database accordingly.
}
\examples{
# example data base
oldDatabase <- list( Europe = data.frame(oldValues = c("Berlin", "Copenhagen", "Rome", "Madrid"),
                                         newValues = c("France", "Denmark", "Italy" , "Spain")),
                     Asia = data.frame(oldValues = c("Baku", "Tokyo", "Kathmandu", "Singapore"),
                                       newValues = c("Azerbaijan", "Japan", "Nepal" , "Singapore")))
oldDatabase
directory <- tempdir()
createRecodeDB(recodeListList = oldDatabase, directory = directory, DBname = "countries")
newRecodes <- data.frame( city = c("Berlin", "Paris", "Athens"),
                          country = c("Germany", "France", "Greece"))
# update the data base without overwriting old information
# (the row containing "Berlin - France" keeps it's old value)
updateRecodeDB(newRecodes = newRecodes,
               oldValues = "city",
               newValues = "country",
               directory = directory,
               DBname = "countries",
               ListName = "Europe",
               override = FALSE)
getRecodeDB(directory, "countries")
# update the data base, overwriting old information
# (the row containing "Berlin - France" get's updated)
updateRecodeDB(newRecodes = newRecodes,
               oldValues = "city",
               newValues = "country",
               directory = directory,
               DBname = "countries",
               ListName = "Europe",
               override = TRUE)
getRecodeDB(directory, "countries")
}
